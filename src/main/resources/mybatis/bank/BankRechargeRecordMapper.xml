<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.information.project.bank.mapper.BankRechargeRecordMapper">
  <resultMap id="BaseResultMap" type="com.information.project.bank.domain.BankRechargeRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="bank_code" jdbcType="VARCHAR" property="bankCode" />
    <result column="trans_date" jdbcType="VARCHAR" property="transDate" />
    <result column="trans_idserial" jdbcType="VARCHAR" property="transIdserial" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="di_number" jdbcType="VARCHAR" property="diNumber" />
    <result column="bank_number" jdbcType="VARCHAR" property="bankNumber" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="return_code" jdbcType="VARCHAR" property="returnCode" />
    <result column="return_message" jdbcType="VARCHAR" property="returnMessage" />
    <result column="bank_idserial" jdbcType="VARCHAR" property="bankIdserial" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, bank_code, trans_date, trans_idserial, user_code, user_name, di_number, 
    bank_number, amount, status, return_code, return_message, bank_idserial, create_time
  </sql>
  <select id="selectByExample" parameterType="com.information.project.bank.domain.BankRechargeRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank_recharge_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bank_recharge_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bank_recharge_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.information.project.bank.domain.BankRechargeRecordExample">
    delete from bank_recharge_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.information.project.bank.domain.BankRechargeRecord">
    insert into bank_recharge_record (id, code, bank_code, 
      trans_date, trans_idserial, user_code, 
      user_name, di_number, bank_number, 
      amount, status, return_code, 
      return_message, bank_idserial, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{bankCode,jdbcType=VARCHAR}, 
      #{transDate,jdbcType=VARCHAR}, #{transIdserial,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{diNumber,jdbcType=VARCHAR}, #{bankNumber,jdbcType=VARCHAR}, 
      #{amount,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{returnCode,jdbcType=VARCHAR}, 
      #{returnMessage,jdbcType=VARCHAR}, #{bankIdserial,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.information.project.bank.domain.BankRechargeRecord">
    insert into bank_recharge_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="bankCode != null">
        bank_code,
      </if>
      <if test="transDate != null">
        trans_date,
      </if>
      <if test="transIdserial != null">
        trans_idserial,
      </if>
      <if test="userCode != null">
        user_code,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="diNumber != null">
        di_number,
      </if>
      <if test="bankNumber != null">
        bank_number,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="returnCode != null">
        return_code,
      </if>
      <if test="returnMessage != null">
        return_message,
      </if>
      <if test="bankIdserial != null">
        bank_idserial,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="transDate != null">
        #{transDate,jdbcType=VARCHAR},
      </if>
      <if test="transIdserial != null">
        #{transIdserial,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="diNumber != null">
        #{diNumber,jdbcType=VARCHAR},
      </if>
      <if test="bankNumber != null">
        #{bankNumber,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="returnCode != null">
        #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="returnMessage != null">
        #{returnMessage,jdbcType=VARCHAR},
      </if>
      <if test="bankIdserial != null">
        #{bankIdserial,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.information.project.bank.domain.BankRechargeRecordExample" resultType="java.lang.Long">
    select count(*) from bank_recharge_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bank_recharge_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null">
        bank_code = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.transDate != null">
        trans_date = #{record.transDate,jdbcType=VARCHAR},
      </if>
      <if test="record.transIdserial != null">
        trans_idserial = #{record.transIdserial,jdbcType=VARCHAR},
      </if>
      <if test="record.userCode != null">
        user_code = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.diNumber != null">
        di_number = #{record.diNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNumber != null">
        bank_number = #{record.bankNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.returnCode != null">
        return_code = #{record.returnCode,jdbcType=VARCHAR},
      </if>
      <if test="record.returnMessage != null">
        return_message = #{record.returnMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.bankIdserial != null">
        bank_idserial = #{record.bankIdserial,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bank_recharge_record
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      bank_code = #{record.bankCode,jdbcType=VARCHAR},
      trans_date = #{record.transDate,jdbcType=VARCHAR},
      trans_idserial = #{record.transIdserial,jdbcType=VARCHAR},
      user_code = #{record.userCode,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      di_number = #{record.diNumber,jdbcType=VARCHAR},
      bank_number = #{record.bankNumber,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      return_code = #{record.returnCode,jdbcType=VARCHAR},
      return_message = #{record.returnMessage,jdbcType=VARCHAR},
      bank_idserial = #{record.bankIdserial,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.information.project.bank.domain.BankRechargeRecord">
    update bank_recharge_record
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="transDate != null">
        trans_date = #{transDate,jdbcType=VARCHAR},
      </if>
      <if test="transIdserial != null">
        trans_idserial = #{transIdserial,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="diNumber != null">
        di_number = #{diNumber,jdbcType=VARCHAR},
      </if>
      <if test="bankNumber != null">
        bank_number = #{bankNumber,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="returnCode != null">
        return_code = #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="returnMessage != null">
        return_message = #{returnMessage,jdbcType=VARCHAR},
      </if>
      <if test="bankIdserial != null">
        bank_idserial = #{bankIdserial,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.information.project.bank.domain.BankRechargeRecord">
    update bank_recharge_record
    set code = #{code,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      trans_date = #{transDate,jdbcType=VARCHAR},
      trans_idserial = #{transIdserial,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      di_number = #{diNumber,jdbcType=VARCHAR},
      bank_number = #{bankNumber,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      return_code = #{returnCode,jdbcType=VARCHAR},
      return_message = #{returnMessage,jdbcType=VARCHAR},
      bank_idserial = #{bankIdserial,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>