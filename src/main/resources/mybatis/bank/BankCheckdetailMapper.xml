<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.information.project.bank.mapper.BankCheckdetailMapper">
  <resultMap id="BaseResultMap" type="com.information.project.bank.domain.BankCheckdetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="idserial" jdbcType="VARCHAR" property="idserial" />
    <result column="bank_idserial" jdbcType="VARCHAR" property="bankIdserial" />
    <result column="trans_date" jdbcType="VARCHAR" property="transDate" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="user_type" jdbcType="CHAR" property="userType" />
    <result column="check_status" jdbcType="CHAR" property="checkStatus" />
    <result column="oper_user" jdbcType="BIGINT" property="operUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, number, idserial, bank_idserial, trans_date, amount, user_type, check_status, 
    oper_user, create_time
  </sql>
  <select id="selectByExample" parameterType="com.information.project.bank.domain.BankCheckdetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank_checkdetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bank_checkdetail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bank_checkdetail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.information.project.bank.domain.BankCheckdetailExample">
    delete from bank_checkdetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.information.project.bank.domain.BankCheckdetail">
    insert into bank_checkdetail (id, number, idserial, 
      bank_idserial, trans_date, amount, 
      user_type, check_status, oper_user, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{number,jdbcType=VARCHAR}, #{idserial,jdbcType=VARCHAR}, 
      #{bankIdserial,jdbcType=VARCHAR}, #{transDate,jdbcType=VARCHAR}, #{amount,jdbcType=VARCHAR}, 
      #{userType,jdbcType=CHAR}, #{checkStatus,jdbcType=CHAR}, #{operUser,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.information.project.bank.domain.BankCheckdetail">
    insert into bank_checkdetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="idserial != null">
        idserial,
      </if>
      <if test="bankIdserial != null">
        bank_idserial,
      </if>
      <if test="transDate != null">
        trans_date,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="checkStatus != null">
        check_status,
      </if>
      <if test="operUser != null">
        oper_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="idserial != null">
        #{idserial,jdbcType=VARCHAR},
      </if>
      <if test="bankIdserial != null">
        #{bankIdserial,jdbcType=VARCHAR},
      </if>
      <if test="transDate != null">
        #{transDate,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=CHAR},
      </if>
      <if test="checkStatus != null">
        #{checkStatus,jdbcType=CHAR},
      </if>
      <if test="operUser != null">
        #{operUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.information.project.bank.domain.BankCheckdetailExample" resultType="java.lang.Long">
    select count(*) from bank_checkdetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bank_checkdetail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.idserial != null">
        idserial = #{record.idserial,jdbcType=VARCHAR},
      </if>
      <if test="record.bankIdserial != null">
        bank_idserial = #{record.bankIdserial,jdbcType=VARCHAR},
      </if>
      <if test="record.transDate != null">
        trans_date = #{record.transDate,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=CHAR},
      </if>
      <if test="record.checkStatus != null">
        check_status = #{record.checkStatus,jdbcType=CHAR},
      </if>
      <if test="record.operUser != null">
        oper_user = #{record.operUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bank_checkdetail
    set id = #{record.id,jdbcType=BIGINT},
      number = #{record.number,jdbcType=VARCHAR},
      idserial = #{record.idserial,jdbcType=VARCHAR},
      bank_idserial = #{record.bankIdserial,jdbcType=VARCHAR},
      trans_date = #{record.transDate,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=CHAR},
      check_status = #{record.checkStatus,jdbcType=CHAR},
      oper_user = #{record.operUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.information.project.bank.domain.BankCheckdetail">
    update bank_checkdetail
    <set>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="idserial != null">
        idserial = #{idserial,jdbcType=VARCHAR},
      </if>
      <if test="bankIdserial != null">
        bank_idserial = #{bankIdserial,jdbcType=VARCHAR},
      </if>
      <if test="transDate != null">
        trans_date = #{transDate,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=CHAR},
      </if>
      <if test="checkStatus != null">
        check_status = #{checkStatus,jdbcType=CHAR},
      </if>
      <if test="operUser != null">
        oper_user = #{operUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.information.project.bank.domain.BankCheckdetail">
    update bank_checkdetail
    set number = #{number,jdbcType=VARCHAR},
      idserial = #{idserial,jdbcType=VARCHAR},
      bank_idserial = #{bankIdserial,jdbcType=VARCHAR},
      trans_date = #{transDate,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=CHAR},
      check_status = #{checkStatus,jdbcType=CHAR},
      oper_user = #{operUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>